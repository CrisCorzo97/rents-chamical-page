generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  user                        user?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model article {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title               String           @default("")
  principal_img_url   String           @default("")
  bucket_reference    String           @default("")
  article_category_id BigInt
  user_id             String           @db.Uuid
  author              String?          @db.VarChar
  created_at          DateTime         @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?        @default(now()) @db.Timestamptz(6)
  article_category    article_category @relation(fields: [article_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  article_topic       article_topic[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model article_category {
  id       BigInt    @id @default(autoincrement())
  category String    @db.VarChar
  article  article[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model article_topic {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subtitle   String?
  content    String?
  img_url    String?
  video_url  String?
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  article_id String    @db.Uuid
  article    article   @relation(fields: [article_id], references: [id], onDelete: Cascade)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model banner {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  img_url    String?
  user_id    String    @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rent {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                  String                     @db.Uuid
  created_at               DateTime                   @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  user                     user                       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  rent_tax_or_contribution rent_tax_or_contribution[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rent_tax_or_contribution {
  id                     String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount                 BigInt
  rent_id                String              @db.Uuid
  tax_or_contribution_id BigInt
  created_at             DateTime            @default(now()) @db.Timestamptz(6)
  updated_at             DateTime?           @default(now()) @db.Timestamptz(6)
  rent                   rent                @relation(fields: [rent_id], references: [id], onDelete: Cascade)
  tax_or_contribution    tax_or_contribution @relation(fields: [tax_or_contribution_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model role {
  id                   BigInt                 @id(map: "user_role_pkey") @default(autoincrement())
  role                 String                 @db.VarChar
  registration_request registration_request[]
  user                 user[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tax_or_contribution {
  id                       BigInt                     @id @default(autoincrement())
  name                     String                     @default("") @db.VarChar
  status                   Boolean                    @default(true)
  rent_tax_or_contribution rent_tax_or_contribution[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user {
  id          String        @id @db.Uuid
  first_name  String        @default("") @db.VarChar
  last_name   String        @default("") @db.VarChar
  email       String        @default("") @db.VarChar
  cuil        String        @default("") @db.VarChar
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?     @default(now()) @db.Timestamptz(6)
  password    String        @default("")
  role_id     BigInt
  article     article[]
  authorities authorities[]
  banner      banner[]
  hero        hero[]
  rent        rent[]
  users       users         @relation(fields: [id], references: [id], onDelete: Cascade)
  role        role          @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_user_role_fkey")

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model authorities {
  id            String   @id @db.VarChar
  personal_info String?
  job_functions String
  img_url       String
  user_id       String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)
  user          user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_authorities_user_id_fkey")

  @@schema("public")
}

model hero {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  img_url    String[]
  video_url  String[]
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  section    String   @default("")
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_hero_user_id_fkey")

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model registration_request {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name String    @default("") @db.VarChar
  last_name  String    @default("") @db.VarChar
  email      String    @default("") @db.VarChar
  cuil       String    @default("") @db.VarChar
  role_id    BigInt?
  status     String    @default("") @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  update_at  DateTime? @db.Timestamptz(6)
  role       role?     @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_registration_request_role_id_fkey")

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model burial_type {
  id        BigInt      @id @default(autoincrement())
  type      String      @db.VarChar
  price     Float?
  cementery cementery[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cementery {
  id                 String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  taxpayer           String          @db.VarChar
  id_neighborhood    BigInt
  address_taxpayer   String?         @db.VarChar
  id_burial_type     BigInt
  section            String?         @db.VarChar
  row                BigInt?
  location_number    BigInt?
  id_cementery_place BigInt
  deceased_name      String?         @db.VarChar
  last_year_paid     BigInt?
  created_at         DateTime        @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?       @db.Timestamptz(6)
  missing_fields     String?
  burial_type        burial_type     @relation(fields: [id_burial_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cementery_place    cementery_place @relation(fields: [id_cementery_place], references: [id], onDelete: NoAction, onUpdate: NoAction)
  neighborhood       neighborhood    @relation(fields: [id_neighborhood], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cementery_place {
  id        BigInt      @id @default(autoincrement())
  name      String      @db.VarChar
  cementery cementery[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model city_section {
  id                    BigInt                  @id @default(autoincrement())
  name                  String                  @db.VarChar
  commercial_enablement commercial_enablement[]
  property              property[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model neighborhood {
  id                    BigInt                  @id @default(autoincrement())
  name                  String                  @db.VarChar
  cementery             cementery[]
  commercial_enablement commercial_enablement[]
  property              property[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model property {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  taxpayer        String        @db.VarChar
  taxpayer_type   String?       @db.VarChar
  enrollment      String?       @db.VarChar
  is_part         Boolean?
  id_city_section BigInt?
  id_neighborhood BigInt?
  address         String?       @db.VarChar
  front_length    Float?        @db.Real
  last_year_paid  BigInt?
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  missing_fields  String?
  city_section    city_section? @relation(fields: [id_city_section], references: [id], onDelete: NoAction, onUpdate: NoAction)
  neighborhood    neighborhood? @relation(fields: [id_neighborhood], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model tb_barrio {
  COD_BARRIO_N_3_0 BigInt          @id @default(autoincrement()) @map("COD_BARRIO,N,3,0")
  DESCRIP_BA_C_100 String          @map("DESCRIP_BA,C,100") @db.VarChar
  tb_cementerio    tb_cementerio[]
  tb_inmueble      tb_inmueble[]

  @@schema("public")
}

model tb_cementerio {
  COD_PERSON_N_6_0 BigInt            @id @default(autoincrement()) @map("COD_PERSON,N,6,0")
  NOMBRE_PER_C_100 String            @map("NOMBRE_PER,C,100") @db.VarChar
  DIRECCION__C_150 String?           @map("DIRECCION_,C,150") @db.VarChar
  NRO_CASA_C_4     String?           @map("NRO_CASA,C,4") @db.VarChar
  COD_BARRIO_N_3_0 BigInt?           @map("COD_BARRIO,N,3,0")
  COD_TIPO_N_2_0   BigInt?           @map("COD_TIPO,N,2,0")
  SECCION_CO_C_3   String?           @map("SECCION_CO,C,3") @db.VarChar
  FILA_C_4         String?           @map("FILA,C,4") @db.VarChar
  NRO_UBICAC_C_6   String?           @map("NRO_UBICAC,C,6") @db.VarChar
  COD_CEMENT_C_2   BigInt?           @map("COD_CEMENT,C,2")
  NOM_DIFUNT_C_100 String?           @map("NOM_DIFUNT,C,100") @db.VarChar
  A_O_DEBE_N_4_0   Decimal?          @map("AÐO_DEBE,N,4,0") @db.Decimal
  tb_barrio        tb_barrio?        @relation(fields: [COD_BARRIO_N_3_0], references: [COD_BARRIO_N_3_0], onDelete: NoAction, onUpdate: NoAction)
  tb_lugares       tb_lugares?       @relation(fields: [COD_CEMENT_C_2], references: [COD_CEMENT_C_2], onDelete: NoAction, onUpdate: NoAction)
  tb_tipo_entierro tb_tipo_entierro? @relation(fields: [COD_TIPO_N_2_0], references: [COD_TIPO_N_2_0], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model tb_inmueble {
  COD_INMUEB_N_6_0 BigInt        @id @default(autoincrement()) @map("COD_INMUEB,N,6,0")
  RAZON_SOCI_C_150 String        @map("RAZON_SOCI,C,150") @db.VarChar
  MATRICULA_C_50   String?       @map("MATRICULA,C,50") @db.VarChar
  DIRECCION_C_150  String?       @map("DIRECCION,C,150") @db.VarChar
  NRO_CASA_C_5     String?       @map("NRO_CASA,C,5") @db.VarChar
  COD_BARRIO_N_3_0 BigInt?       @map("COD_BARRIO,N,3,0")
  COD_SECCIO_N_3_0 BigInt?       @map("COD_SECCIO,N,3,0")
  MTS_FRENTE_N_4_0 Decimal?      @map("MTS_FRENTE,N,4,0") @db.Decimal
  A_O_PAGADO_N_4_0 BigInt?       @map("AÐO_PAGADO,N,4,0")
  tb_barrio        tb_barrio?    @relation(fields: [COD_BARRIO_N_3_0], references: [COD_BARRIO_N_3_0], onDelete: NoAction, onUpdate: NoAction)
  tb_secciones     tb_secciones? @relation(fields: [COD_SECCIO_N_3_0], references: [COD_SECCIO_N_3_0], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model tb_lugares {
  COD_CEMENT_C_2   BigInt          @id @default(autoincrement()) @map("COD_CEMENT,C,2")
  DESCRIP_CE_C_100 String          @map("DESCRIP_CE,C,100") @db.VarChar
  tb_cementerio    tb_cementerio[]

  @@schema("public")
}

model tb_secciones {
  COD_SECCIO_N_3_0 BigInt        @id @default(autoincrement()) @map("COD_SECCIO,N,3,0")
  DESCRIP_SE_C_4   String        @map("DESCRIP_SE,C,4") @db.VarChar
  tb_inmueble      tb_inmueble[]

  @@schema("public")
}

model tb_tipo_entierro {
  COD_TIPO_N_2_0   BigInt          @id @default(autoincrement()) @map("COD_TIPO,N,2,0")
  DESCRIP_TI_C_100 String          @map("DESCRIP_TI,C,100") @db.VarChar
  IMPORTE_TI_N_8_0 Decimal?        @map("IMPORTE_TI,N,8,0") @db.Decimal
  tb_cementerio    tb_cementerio[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model receipt {
  id               String    @id(map: "Receipts_pkey") @db.VarChar
  taxpayer         String    @db.VarChar
  amount           Float
  tax_type         String    @db.VarChar
  id_tax_reference String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime  @default(now()) @db.Timestamptz(6)
  confirmed_at     DateTime? @db.Timestamptz(6)
  other_data       Json?     @db.Json

  @@schema("public")
}

model commercial_enablement {
  id                                String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tax_id                            String?       @db.VarChar
  taxpayer                          String?       @db.VarChar
  company_name                      String?       @db.VarChar
  commercial_enablement_category_id BigInt?
  address                           String?
  address_number                    BigInt?
  neightborhood_id                  BigInt?
  city_section_id                   BigInt?
  block                             String?       @db.VarChar
  parcel                            String?       @db.VarChar
  created_at                        DateTime      @default(now()) @db.Timestamptz(6)
  registration_receipt              String?       @db.VarChar
  cancellation_date                 DateTime?     @db.Timestamptz(6)
  cancellation_receipt              String?       @db.VarChar
  gross_income_rate                 String?       @db.VarChar
  last_year_paid                    BigInt?
  registration_date                 DateTime?     @db.Timestamptz(6)
  city_section                      city_section? @relation(fields: [city_section_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  neighborhood                      neighborhood? @relation(fields: [neightborhood_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}
